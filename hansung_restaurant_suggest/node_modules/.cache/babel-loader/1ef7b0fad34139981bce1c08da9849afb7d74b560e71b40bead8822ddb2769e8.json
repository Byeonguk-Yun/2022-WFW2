{"ast":null,"code":"var _jsxFileName = \"/Users/choyoonjeong/Desktop/2022-2/2022-WFW2/hansung_restaurant_suggest/src/components/MapApi2.js\";\nimport { useEffect, useRef } from 'react';\nimport React from 'react';\nimport { RenderAfterNavermapsLoaded, NaverMap } from 'react-naver-maps';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MapApi2 = () => {\n  /*\n  const mapElement = useRef(null);\n    useEffect(() => {\n      const { naver } = window;\n      if (!mapElement.current || !naver) return;\n       // 지도에 표시할 위치의 위도와 경도 좌표를 파라미터로 넣어줍니다.\n      const location = new naver.maps.LatLng(37.5656, 126.9769);\n      const mapOptions: naver.maps.MapOptions = {\n      center: location,\n      zoom: 17,\n      zoomControl: true,\n      zoomControlOptions: {\n          position: naver.maps.Position.TOP_RIGHT,\n      },\n      };\n      const map = new naver.maps.Map(mapElement.current, mapOptions);\n      new naver.maps.Marker({\n      position: location,\n      map,\n      });\n  }, []);\n  return (\n  <div ref={mapElement} style={{ minHeight: '400px' }} />\n  );\n  */\n  function NaverMapComponent() {\n    const id = this.props.itemData.id;\n    return /*#__PURE__*/_jsxDEV(NaverMap, {\n      mapDivId: \"react-naver-map\",\n      style: {\n        width: '100%',\n        height: '100vh'\n      },\n      defaultCenter: {\n        lat: 37.554722,\n        lng: 126.970833\n      },\n      defaultZoom: 10\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(RenderAfterNavermapsLoaded, {\n    ncpClientId: process.env.Client_ID,\n    error: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Maps Load Error\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 16\n    }, this),\n    loading: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Maps Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 18\n    }, this),\n    children: /*#__PURE__*/_jsxDEV(NaverMapComponent, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n_c = MapApi2;\nexport default MapApi2;\nvar _c;\n$RefreshReg$(_c, \"MapApi2\");","map":{"version":3,"names":["useEffect","useRef","React","RenderAfterNavermapsLoaded","NaverMap","MapApi2","NaverMapComponent","id","props","itemData","width","height","lat","lng","process","env","Client_ID"],"sources":["/Users/choyoonjeong/Desktop/2022-2/2022-WFW2/hansung_restaurant_suggest/src/components/MapApi2.js"],"sourcesContent":["import { useEffect, useRef } from 'react';\nimport React from 'react';\nimport { RenderAfterNavermapsLoaded, NaverMap } from 'react-naver-maps';\n\nconst MapApi2 = () => {\n    /*\n    const mapElement = useRef(null);\n\n\n    useEffect(() => {\n        const { naver } = window;\n        if (!mapElement.current || !naver) return;\n\n        // 지도에 표시할 위치의 위도와 경도 좌표를 파라미터로 넣어줍니다.\n        const location = new naver.maps.LatLng(37.5656, 126.9769);\n        const mapOptions: naver.maps.MapOptions = {\n        center: location,\n        zoom: 17,\n        zoomControl: true,\n        zoomControlOptions: {\n            position: naver.maps.Position.TOP_RIGHT,\n        },\n        };\n        const map = new naver.maps.Map(mapElement.current, mapOptions);\n        new naver.maps.Marker({\n        position: location,\n        map,\n        });\n    }, []);\n\n\n  return (\n    <div ref={mapElement} style={{ minHeight: '400px' }} />\n    );\n    */\n    function NaverMapComponent() {\n    const id = this.props.itemData.id;\n    return (\n        <NaverMap\n        mapDivId={\"react-naver-map\"}\n        style={{\n            width: '100%',\n            height: '100vh'\n        }}\n        defaultCenter={{ lat: 37.554722, lng: 126.970833 }}\n        defaultZoom={10}\n        />\n    );\n    }\n      \n    return (\n        <RenderAfterNavermapsLoaded\n        ncpClientId={process.env.Client_ID}\n        error={<p>Maps Load Error</p>}\n        loading={<p>Maps Loading...</p>}\n        >\n        <NaverMapComponent />\n        </RenderAfterNavermapsLoaded>\n    );\n    \n}\n\nexport default MapApi2;"],"mappings":";AAAA,SAASA,SAAS,EAAEC,MAAM,QAAQ,OAAO;AACzC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,0BAA0B,EAAEC,QAAQ,QAAQ,kBAAkB;AAAC;AAExE,MAAMC,OAAO,GAAG,MAAM;EAClB;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAMI,SAASC,iBAAiB,GAAG;IAC7B,MAAMC,EAAE,GAAG,IAAI,CAACC,KAAK,CAACC,QAAQ,CAACF,EAAE;IACjC,oBACI,QAAC,QAAQ;MACT,QAAQ,EAAE,iBAAkB;MAC5B,KAAK,EAAE;QACHG,KAAK,EAAE,MAAM;QACbC,MAAM,EAAE;MACZ,CAAE;MACF,aAAa,EAAE;QAAEC,GAAG,EAAE,SAAS;QAAEC,GAAG,EAAE;MAAW,CAAE;MACnD,WAAW,EAAE;IAAG;MAAA;MAAA;MAAA;IAAA,QACd;EAEN;EAEA,oBACI,QAAC,0BAA0B;IAC3B,WAAW,EAAEC,OAAO,CAACC,GAAG,CAACC,SAAU;IACnC,KAAK,eAAE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAuB;IAC9B,OAAO,eAAE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAuB;IAAA,uBAEhC,QAAC,iBAAiB;MAAA;MAAA;MAAA;IAAA;EAAG;IAAA;IAAA;IAAA;EAAA,QACQ;AAGrC,CAAC;AAAA,KAxDKX,OAAO;AA0Db,eAAeA,OAAO;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}